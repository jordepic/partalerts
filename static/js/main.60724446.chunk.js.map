{"version":3,"sources":["contexts/authContext.tsx","contexts/loadContext.tsx","network/auth.ts","components/authForm.tsx","pages/home.tsx","contexts/partContext.tsx","network/part.ts","components/searchAndAddPart.tsx","components/userPartsList.tsx","pages/parts.tsx","components/protectedRoute.tsx","components/sendResetEmailForm.tsx","pages/sendResetEmail.tsx","components/resetPasswordForm.tsx","pages/resetPassword.tsx","components/header.tsx","index.tsx","styles/authForm.module.css","styles/userPartsList.module.css","styles/header.module.css","styles/index.module.css","styles/searchAndAddPart.module.css"],"names":["AuthContext","react","createContext","loggedIn","token","setLoggedIn","setToken","LoadContext","loading","setLoading","url","process","logInEmailPassword","email","password","remember","a","axios","post","withCredentials","crossDomain","res","console","log","data","logInToken","get","logOut","Message","register","sendResetEmail","resetPassword","code","withRouter","Cookies","props","useState","cookie","form","setForm","registering","setRegistering","setError","auth","useContext","load","handleChange","e","target","type","name","checked","value","registerOrLogIn","logIn","history","push","registerNetwork","Group","onChange","toggleRegister","buttonStyle","Button","className","styles","Radio","Checkbox","id","placeholder","bordered","Input","Password","size","onClick","HomePage","logInWithCookie","useEffect","PartContext","parts","page","numPages","filterName","setParts","setPage","setNumPages","setFilterName","searchParts","has_more","addPartForUser","loadPartsForUser","deleteUserPart","SearchAndAddPart","part","setPart","loadParts","search","loadedOptions","response","options","map","label","hasMore","additional","addPart","msg","fetchParts","loadOptions","Select","UserPartsList","deletePart","toString","style","height","width","changeFilterName","List","dataSource","renderItem","item","Item","ListItem","Pagination","defaultPageSize","total","current","pageSize","PartPage","partsList","Array","isArray","PrivateRoute","component","rest","render","React","createElement","to","pathname","setEmail","sendResetEmailNetwork","SendResetEmail","resetPasswordNetwork","parseInt","ResetPassword","Header","logOutNetwork","Logo","Menu","LogOut","App","Provider","Layout","Content","exact","path","Footer","ReactDOM","basename","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.60724446.chunk.js","sourcesContent":["import react, {useState} from 'react';\r\n\r\nexport interface AuthContextData {\r\n    loggedIn: boolean,\r\n    token: string,\r\n    setLoggedIn: React.Dispatch<React.SetStateAction<boolean>>,\r\n    setToken: React.Dispatch<React.SetStateAction<string>>\r\n}\r\n\r\nexport const AuthContext = react.createContext<AuthContextData>({\r\n    loggedIn: false,\r\n    token: '',\r\n    setLoggedIn: () => {},\r\n    setToken: () => {}\r\n});","import react, {createContext} from 'react';\r\n\r\nexport interface LoadContextData {\r\n    loading: boolean,\r\n    setLoading: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nexport const LoadContext = createContext<LoadContextData>({\r\n    loading: false,\r\n    setLoading: () => {}\r\n});","import axios from 'axios';\r\n\r\nlet url = process.env.REACT_APP_BACKEND_URL as string;\r\n\r\nexport const logInEmailPassword = async (email: string, password: string, remember: boolean) => {\r\n    try {\r\n        let res = await axios.post(`${url}/login/email`, {email, password, remember}, {withCredentials: true, crossDomain: true} as any) as any;\r\n        console.log(res);\r\n        return res.data.token;\r\n    }\r\n    catch(e) {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport const logInToken = async () => {\r\n    try {\r\n        let res = await axios.get(`${url}/login/token`, {withCredentials: true, crossDomain: true} as any) as any;\r\n        return res.data.token;\r\n    }\r\n    catch(e) {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport const logOut = async () => {\r\n    try {\r\n        let res = await axios.get(`${url}/logout`, {withCredentials: true}) as any;\r\n        return res.data.Message;\r\n    }\r\n    catch(e) {\r\n        return \"Failure\";\r\n    }\r\n}\r\n\r\nexport const register = async (email: string, password: string, remember: boolean) => {\r\n    try {\r\n        let res = await axios.post(`${url}/register`, {email, password}, {withCredentials: true}) as any;\r\n        if (res.data.Message == \"Success\") {\r\n            let res = await axios.post(`${url}/login/email`, {email, password, remember}, {withCredentials: true}) as any;\r\n            return res.data.token;\r\n        }\r\n        return \"\";\r\n    }\r\n    catch(e) {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport const sendResetEmail = async (email: string) => {\r\n    try {\r\n        let res = await axios.post(`${url}/email`, {email}, {withCredentials: true}) as any;\r\n        if (res.data.Message === \"Success\") {\r\n            return \"Success\"\r\n        }\r\n        return \"Failure\";\r\n    }\r\n    catch(e) {\r\n        return \"Failure\";\r\n    }\r\n}\r\n\r\nexport const resetPassword = async (email: string, password: string, code: number) => {\r\n    try {\r\n        let res = await axios.post(`${url}/reset`, {email, password, code}, {withCredentials: true}) as any;\r\n        if (res.data.Message === \"Success\") {\r\n            return \"Success\"\r\n        }\r\n        return \"Failure\";\r\n    }\r\n    catch(e) {\r\n        return \"Failure\";\r\n    }\r\n}","import react, { useContext, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/authContext';\r\nimport { LoadContext } from '../contexts/loadContext';\r\nimport { logInEmailPassword, register as registerNetwork} from \"../network/auth\";\r\nimport Cookies from 'universal-cookie';\r\nimport { Checkbox, Input, Button, Radio } from 'antd';\r\nimport styles from '../styles/authForm.module.css';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst AuthForm = (props: any) => {\r\n\r\n    let [form, setForm] = useState({email: '', password: '', cookie: false});\r\n    let [registering, setRegistering] = useState(false);\r\n    let [error, setError] = useState('');\r\n\r\n    let auth = useContext(AuthContext);\r\n    let load = useContext(LoadContext);\r\n\r\n    const toggleRegister = (e: any) => {\r\n        setRegistering(e.target.value);\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        if (e.target.type === \"checkbox\") {\r\n            setForm({...form, [e.target.name]: e.target.checked});\r\n        }\r\n        else {\r\n            setForm({...form, [e.target.name]: e.target.value});\r\n        }\r\n    }\r\n\r\n    const registerOrLogIn = async () => {\r\n        if (registering) {\r\n            await register(); \r\n        }\r\n        else {\r\n            await logIn();\r\n        }\r\n    }\r\n\r\n    const logIn = async () => {\r\n        if (form.email === \"\" || form.password === \"\") {\r\n            setError(\"Make sure email and password are not empty\");\r\n        }\r\n        else {\r\n            load.setLoading(true);\r\n            let token = await logInEmailPassword(form.email, form.password, form.cookie);\r\n            load.setLoading(false);\r\n            if (token === \"\") {\r\n                setError(\"Invalid email or password\");\r\n            }\r\n            else {\r\n                auth.setLoggedIn(true);\r\n                auth.setToken(token);\r\n                props.history.push('/parts');\r\n            }\r\n        }\r\n    }\r\n\r\n    const register = async () => {\r\n        if (form.email === \"\" || form.password === \"\") {\r\n            setError(\"Make sure email and password are not empty\");\r\n        }\r\n        else {\r\n            load.setLoading(true);\r\n            let token = await registerNetwork(form.email, form.password, form.cookie);\r\n            load.setLoading(false);\r\n            if (token === \"\") {\r\n                setError(\"Invalid email or password\");\r\n            }\r\n            else {\r\n                auth.setLoggedIn(true);\r\n                auth.setToken(token);\r\n                props.history.push('/parts');\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Radio.Group onChange={e => toggleRegister(e)} buttonStyle=\"outline\">\r\n                <Radio.Button className={styles.Radio} value={true}>Register</Radio.Button>\r\n                <Radio.Button className={styles.Radio} value={false}>Log In</Radio.Button>\r\n            </Radio.Group>\r\n            <br/>\r\n            <br/>\r\n            {registering ? \r\n            <div></div>\r\n                :\r\n            <label>\r\n                <Checkbox className={styles.Checkbox} id=\"remember\" type=\"checkbox\" name=\"cookie\" checked={form.cookie} onChange={e => {handleChange(e)}}/>\r\n                Remember me\r\n            </label>\r\n            }\r\n            <Input placeholder=\"email\" bordered={false} className={styles.Input} name=\"email\" type=\"text\" onChange={e => handleChange(e)} />\r\n            <br/>\r\n            <Input.Password placeholder=\"password\" bordered={false} className={styles.Input} name=\"password\" type={registering ? \"text\" : \"password\"} onChange={e => handleChange(e)}/>\r\n            <br/>\r\n            <Button className={styles.Button} type=\"primary\" size=\"large\" onClick={async () => await registerOrLogIn()}>{registering ? \"Sign Up\" : \"Log In\"}</Button>\r\n            <br/>\r\n            {\r\n                registering ? \r\n                <div></div>\r\n                    :\r\n                <Button className={styles.Button} type=\"ghost\" size=\"large\" onClick={() => props.history.push('/send-reset-email')}>\r\n                    Forgot password? Reset it.\r\n                </Button>\r\n                \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(AuthForm);","import Cookies from 'js-cookie';\r\nimport react, {useContext, useEffect} from 'react';\r\nimport AuthForm from '../components/authForm';\r\nimport { AuthContext } from \"../contexts/authContext\";\r\nimport { LoadContext } from '../contexts/loadContext';\r\nimport { logInToken } from '../network/auth';\r\n\r\nexport const HomePage = (props: any) => {\r\n\r\n    const auth = useContext(AuthContext);\r\n    const load = useContext(LoadContext);\r\n\r\n    const logInWithCookie = async () => {\r\n        load.setLoading(true);\r\n        let token = await logInToken();\r\n        if (token !== \"\") {\r\n          auth.setLoggedIn(true);\r\n          auth.setToken(token);\r\n          props.history.push('/parts');\r\n        }\r\n      }\r\n    \r\n    useEffect(() => {\r\n        logInWithCookie();\r\n    }, [])\r\n     \r\n    return (\r\n        <div>\r\n            <AuthForm/>\r\n        </div>\r\n    )\r\n}","import react, { useState } from 'react';\r\n\r\nexport interface Part {\r\n  id: number,\r\n  name: string,\r\n  type: string\r\n}\r\n\r\nexport interface PartContextData {\r\n  parts: Part[],\r\n  setParts: React.Dispatch<React.SetStateAction<Part[]>>,\r\n  page: number,\r\n  setPage: React.Dispatch<React.SetStateAction<number>>,\r\n  numPages: number,\r\n  setNumPages: React.Dispatch<React.SetStateAction<number>>,\r\n  filterName: string,\r\n  setFilterName: React.Dispatch<React.SetStateAction<string>>\r\n\r\n}\r\n\r\nexport const PartContext = react.createContext<PartContextData>({\r\n  parts: [],\r\n  page: 1,\r\n  numPages: 1,\r\n  filterName: '',\r\n  setParts: () => { },\r\n  setPage: () => { },\r\n  setNumPages: () => { },\r\n  setFilterName: () => { }\r\n});","import axios from 'axios';\r\n\r\nlet url = process.env.REACT_APP_BACKEND_URL as string;\r\n\r\nexport const searchParts = async (name: string, page: number) => {\r\n  try {\r\n    let res = await axios.get(`${url}/search?name=${name}&page=${page}`, { withCredentials: true }) as any;\r\n    return res.data;\r\n  }\r\n  catch (e) {\r\n    return { parts: [], has_more: false };\r\n  }\r\n}\r\n\r\nexport const addPartForUser = async (name: string) => {\r\n  try {\r\n    let res = await axios.post(`${url}/addPart`, { name }, { withCredentials: true }) as any;\r\n    return res.data.Message;\r\n  }\r\n  catch (e) {\r\n    return \"Failure\"\r\n  }\r\n}\r\n\r\nexport const loadPartsForUser = async (page: number, name: string) => {\r\n  try {\r\n    let res = await axios.get(`${url}/userParts?page=${page}&name=${name}`, { withCredentials: true }) as any;\r\n    return res.data;\r\n  }\r\n  catch (e) {\r\n    return [];\r\n  }\r\n}\r\n\r\nexport const deleteUserPart = async (name: string) => {\r\n  try {\r\n    let res = await axios.post(`${url}/removePart`, { name }, { withCredentials: true }) as any;\r\n    return res.data.Message;\r\n  }\r\n  catch (e) {\r\n    return \"Failure\"\r\n  }\r\n}","import react, { useContext, useState } from 'react';\r\nimport { AsyncPaginate } from 'react-select-async-paginate';\r\nimport { LoadContext } from '../contexts/loadContext';\r\nimport { PartContext } from '../contexts/partContext';\r\nimport { searchParts, addPartForUser } from \"../network/part\";\r\nimport { Button } from \"antd\";\r\nimport styles from \"../styles/searchAndAddPart.module.css\";\r\n\r\nexport const SearchAndAddPart = (props: any) => {\r\n\r\n  let [part, setPart] = useState({});\r\n  let [error, setError] = useState('');\r\n\r\n  let partContext = useContext(PartContext);\r\n  let load = useContext(LoadContext);\r\n\r\n  const changePart = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setPart(e.target.value);\r\n  }\r\n\r\n  const loadParts = async (search: string, loadedOptions: any, { page }: { page: number }) => {\r\n\r\n    const response = await searchParts(search, page);\r\n\r\n    return {\r\n      options: response.parts.map((part: any) => { return { value: part, label: part.name } }),\r\n      hasMore: response.has_more,\r\n      additional: {\r\n        page: page + 1,\r\n      },\r\n    };\r\n  };\r\n\r\n  const addPart = async () => {\r\n    if (\"label\" in part) {\r\n      load.setLoading(true);\r\n      let msg = await addPartForUser((part as any).label);\r\n      load.setLoading(false);\r\n      if (msg === \"Success\") {\r\n        await props.fetchParts();\r\n      }\r\n      else {\r\n        setError(\"Error adding part. Make sure that you have not already added it.\");\r\n      }\r\n    }\r\n    else {\r\n      setError('You need to choose a part to add.');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AsyncPaginate\r\n        value={part}\r\n        loadOptions={loadParts as any}\r\n        onChange={setPart}\r\n        additional={{\r\n          page: 1,\r\n        }}\r\n        className={styles.Select}\r\n      />\r\n      <Button className={styles.Button} type=\"primary\" size=\"large\" onClick={async () => await addPart()}>\r\n        Add Part\r\n      </Button>\r\n    </div>\r\n  )\r\n}","import react, { useContext, useEffect, useState } from 'react';\r\nimport { LoadContext } from '../contexts/loadContext';\r\nimport { PartContext } from '../contexts/partContext';\r\nimport { deleteUserPart, loadPartsForUser } from '../network/part';\r\nimport ReactPaginate from 'react-paginate';\r\nimport styles from \"../styles/userPartsList.module.css\";\r\nimport { Button, Input, List, Pagination } from 'antd';\r\n\r\nexport const UserPartsList = (props: any) => {\r\n\r\n  let load = useContext(LoadContext);\r\n  let part = useContext(PartContext);\r\n\r\n  const changeFilterName = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    part.setFilterName(e.target.value);\r\n  }\r\n\r\n  const changePage = (page: number, pageSize?: number) => {\r\n    console.log(page);\r\n    part.setPage(page);\r\n  }\r\n\r\n  const partComponents = part.parts.map(part => {\r\n    return (\r\n      <li id={part.id.toString()}>\r\n        <p>{part.name}</p>\r\n        <button style={{ height: \"20px\", width: \"80px\" }} onClick={async () => await deletePart(part.name)}>Delete</button>\r\n      </li>\r\n    )\r\n  })\r\n\r\n  const deletePart = async (name: string) => {\r\n    load.setLoading(true);\r\n    let msg = await deleteUserPart(name);\r\n    load.setLoading(false);\r\n    if (msg === \"Success\") {\r\n      await props.fetchParts();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.fetchParts();\r\n  }, [part.filterName, part.page]);\r\n\r\n  return (\r\n    <div>\r\n      <Input placeholder=\"Search in your parts...\" bordered={false} className={styles.Input} type=\"text\" name=\"filterName\" value={part.filterName} onChange={e => changeFilterName(e)}/>\r\n      <br/> \r\n      <List\r\n        className={styles.List}\r\n        bordered\r\n        dataSource={part.parts}\r\n        renderItem={item => (\r\n          <List.Item>\r\n            <h4 className={styles.ListItem}>{item.name}</h4>\r\n            <Button size=\"small\" type=\"ghost\" onClick={async () => await deletePart(item.name)}>Delete</Button>\r\n          </List.Item>\r\n        )}\r\n      />\r\n      <Pagination className={styles.Pagination} defaultPageSize={1} total={part.numPages} current={part.page} onChange={changePage}/>\r\n    </div>\r\n  )\r\n}","import react, { useContext } from 'react';\r\nimport { SearchAndAddPart } from \"../components/searchAndAddPart\";\r\nimport { UserPartsList } from '../components/userPartsList';\r\nimport { LoadContext } from '../contexts/loadContext';\r\nimport { PartContext } from '../contexts/partContext';\r\nimport { loadPartsForUser } from '../network/part';\r\n\r\nexport const PartPage = () => {\r\n\r\n    const load = useContext(LoadContext);\r\n    const part = useContext(PartContext)\r\n\r\n    const fetchParts = async () => {\r\n        load.setLoading(true);\r\n        let partsList = await loadPartsForUser(part.page, part.filterName);\r\n        console.log(partsList);\r\n        load.setLoading(false);\r\n        if (Array.isArray(partsList)) {\r\n            part.setParts([]);\r\n            part.setNumPages(0);\r\n        }\r\n        else {\r\n            part.setParts(partsList.parts);\r\n            part.setNumPages(partsList.numPages);\r\n        }\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            <SearchAndAddPart fetchParts={fetchParts} />\r\n            <UserPartsList fetchParts={fetchParts}/>\r\n        </div>\r\n    )\r\n}","import React, {useContext} from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/authContext';\r\n\r\nexport const PrivateRoute = ({component, ...rest}: any) => {\r\n\r\n    const auth = useContext(AuthContext) as any;\r\n\r\n    const routeComponent = (props: any) => (\r\n        auth.loggedIn\r\n            ? React.createElement(component, props)\r\n            : <Redirect to={{pathname: '/'}}/>\r\n    );\r\n\r\n    return <Route {...rest} render={routeComponent}/>;\r\n};","import react, {useState, useContext} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { LoadContext } from '../contexts/loadContext';\r\nimport {sendResetEmail, sendResetEmail as sendResetEmailNetwork} from \"../network/auth\";\r\n\r\nconst SendResetEmailForm = (props: any) => {\r\n\r\n    let [email, setEmail] = useState('');\r\n    let [error, setError] = useState('');\r\n\r\n    let load = useContext(LoadContext);\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const sendResetEmail = async () => {\r\n        if (email === \"\") {\r\n            setError(\"Make sure email is not empty\");\r\n        }\r\n        else {\r\n            load.setLoading(true);\r\n            let res = await sendResetEmailNetwork(email);\r\n            load.setLoading(false);\r\n            if (res === \"Success\") {\r\n                props.history.push('/change-password');\r\n            }\r\n            else {\r\n                setError(\"Email failed to send - account with this email may not exist\");\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" name=\"email\" value={email} onChange={(e) => handleChange(e)}/>\r\n            <input type=\"submit\" style={{\r\n                width:\"100px\",\r\n                height: \"100px\"\r\n            }\r\n                }\r\n                onClick={async () => await sendResetEmail()}>\r\n            </input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(SendResetEmailForm);","import react from 'react';\r\nimport SendResetEmailForm from '../components/sendResetEmailForm';\r\n\r\nexport const SendResetEmail = () => {\r\n    return (\r\n        <div>\r\n            <SendResetEmailForm/>\r\n        </div>\r\n    )\r\n}","import react, { useContext, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { LoadContext } from '../contexts/loadContext';\r\nimport { resetPassword as resetPasswordNetwork} from \"../network/auth\";\r\n\r\nconst ResetPasswordForm = (props: any) => {\r\n\r\n    let [form, setForm] = useState({email: '', password: '', code: ''});\r\n    let [error, setError] = useState('');\r\n\r\n    let load = useContext(LoadContext);\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.type === \"checkbox\") {\r\n            setForm({...form, [e.target.name]: e.target.checked});\r\n        }\r\n        else {\r\n            setForm({...form, [e.target.name]: e.target.value});\r\n        }\r\n    }\r\n\r\n    const resetPassword = async () => {\r\n        if (form.email === \"\" || form.password === \"\" || form.code === '') {\r\n            setError(\"Make sure email and password are not empty\");\r\n        }\r\n        else {\r\n            load.setLoading(true);\r\n            let res = await resetPasswordNetwork(form.email, form.password, parseInt(form.code));\r\n            load.setLoading(false);\r\n            if (res === \"Success\") {\r\n                props.history.push('/');\r\n            }\r\n            else {\r\n                setError(\"Make sure that you are using the correct email and activation code\");\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <input name=\"email\" type=\"text\" onChange={e => handleChange(e)} />\r\n            <input name=\"password\" type=\"text\" onChange={e => handleChange(e)}/>\r\n            <input name=\"code\" type=\"number\" onChange={e => handleChange(e)}/>\r\n            <input type=\"submit\" style={{\r\n                width:\"100px\",\r\n                height: \"100px\"\r\n            }\r\n                }\r\n                onClick={async () => await resetPassword()}>\r\n            </input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ResetPasswordForm);","import react from 'react';\r\nimport ResetPasswordForm from '../components/resetPasswordForm';\r\n\r\nexport const ResetPassword = () => {\r\n    return (\r\n        <div>\r\n            <ResetPasswordForm/>\r\n        </div>\r\n    )\r\n}","import react, { useContext } from 'react';\r\nimport { AuthContext } from '../contexts/authContext';\r\nimport { Layout, Menu } from 'antd';\r\nimport styles from \"../styles/header.module.css\";\r\nimport { LoadContext } from '../contexts/loadContext';\r\nimport { PartContext } from '../contexts/partContext';\r\nimport { logOut as logOutNetwork } from \"../network/auth\";\r\n\r\n\r\nexport const Header = () => {\r\n\r\n    let auth = useContext(AuthContext);\r\n    let load = useContext(LoadContext);\r\n    let part = useContext(PartContext);\r\n\r\n    const logOut = async () => {\r\n        load.setLoading(true);\r\n        let msg = await logOutNetwork();\r\n        load.setLoading(false);\r\n        if (msg === \"Success\") {\r\n            auth.setToken('');\r\n            auth.setLoggedIn(false);\r\n            part.setParts([]);\r\n            part.setPage(1);\r\n            part.setNumPages(1);\r\n            part.setFilterName('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Layout.Header className={styles.Header}>\r\n            <h1 className={styles.Logo}>Bapcs alerts</h1>\r\n            {auth.loggedIn ? \r\n                <div className={styles.Menu}>\r\n                    <a className={styles.LogOut} onClick={async () => {await logOut()}}>Log Out</a>\r\n                </div> \r\n                    : \r\n                <div></div>\r\n            }\r\n        </Layout.Header>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HomePage } from \"./pages/home\";\r\nimport { BrowserRouter, HashRouter, Route, Switch } from 'react-router-dom';\r\nimport { AuthContext } from \"./contexts/authContext\";\r\nimport { PartPage } from './pages/parts';\r\nimport { PrivateRoute } from './components/protectedRoute';\r\nimport { LoadContext } from './contexts/loadContext';\r\nimport { SendResetEmail } from './pages/sendResetEmail';\r\nimport { ResetPassword } from './pages/resetPassword';\r\nimport { Part, PartContext } from './contexts/partContext';\r\nimport { Layout } from 'antd';\r\nimport styles from \"./styles/index.module.css\";\r\nimport 'antd/dist/antd.css';\r\nimport './styles/global.css';\r\nimport { Header } from \"./components/header\";\r\n\r\nconst App = (props: any) => {\r\n\r\n  let [loggedIn, setLoggedIn] = useState(false);\r\n  let [token, setToken] = useState('');\r\n  let [loading, setLoading] = useState(false);\r\n  let [parts, setParts] = useState<Part[]>([]);\r\n  let [page, setPage] = useState(1);\r\n  let [numPages, setNumPages] = useState(1);\r\n  let [filterName, setFilterName] = useState('');\r\n\r\n  return (\r\n    <LoadContext.Provider value={{ loading, setLoading }}>\r\n      <AuthContext.Provider value={{ loggedIn, setLoggedIn, token, setToken }}>\r\n        <PartContext.Provider value={{ parts, setParts, page, setPage, numPages, setNumPages, filterName, setFilterName }}>\r\n          <Layout className={styles.Layout}>\r\n            <Header/>\r\n            <Layout.Content className={styles.Content}>\r\n              <Route exact path='/' component={HomePage} />\r\n              <Route exact path='/send-reset-email' component={SendResetEmail} />\r\n              <Route exact path='/change-password' component={ResetPassword} />\r\n              <PrivateRoute exact path='/parts' component={PartPage} />\r\n              </Layout.Content>\r\n            <Layout.Footer className={styles.Footer}>Please contact jordepstein@gmail.com with any issues. Thanks!</Layout.Footer>\r\n          </Layout>\r\n        </PartContext.Provider>\r\n      </AuthContext.Provider>\r\n    </LoadContext.Provider>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <HashRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"authForm_Input__2Rzet\",\"Radio\":\"authForm_Radio__2Jj1z\",\"Button\":\"authForm_Button__3njMC\",\"Checkbox\":\"authForm_Checkbox__3YdFt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"userPartsList_Input__2CquV\",\"ListItem\":\"userPartsList_ListItem__DANfz\",\"Pagination\":\"userPartsList_Pagination__3A2cd\",\"List\":\"userPartsList_List__3Kjh5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"header_Logo__4ZlDa\",\"Header\":\"header_Header__3Tp67\",\"Menu\":\"header_Menu__2hb5N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"styles_Layout__2Xm_r\",\"Footer\":\"styles_Footer__1-0iL\",\"Content\":\"styles_Content__3PXeK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"searchAndAddPart_Select__2YaR7\",\"Button\":\"searchAndAddPart_Button__3TLR1\"};"],"sourceRoot":""}